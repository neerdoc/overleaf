name: Build and publish

on: 
  push:
    branches: [ release ]
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Read version
        id: getversion
        run: echo "version=$(cat version)" >> $GITHUB_OUTPUT
      
      # - name: Extract metadata (tags, labels) for Docker
      #   id: meta
      #   uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
      #   with:
      #     images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Read docker tag version of base image
        id: basetag
        run: echo "version=$(docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-base:${{ steps.getversion.outputs.version }} | grep "Status:" | awk -F':' '{print $3}')" >> $GITHUB_OUTPUT

      - name: Build and push Docker base image
        if: ${{ steps.getversion.outputs.version }} != ${{ steps.basetag.outputs.version }}
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./server-ce/Dockerfile-base.wulf
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-base:${{ steps.getversion.outputs.version }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./server-ce/Dockerfile
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.getversion.outputs.version }}
          build-args: SHARELATEX_BASE_TAG=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-base:${{ steps.getversion.outputs.version }}


      - uses: ncipollo/release-action@v1
        with:
          # artifacts: "*.bz2"
          tag: ${{ steps.getversion.outputs.version }}